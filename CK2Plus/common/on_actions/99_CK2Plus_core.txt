###########################
# TIME PERIODS
###########################

# WARNING: Fires for EVERY non-ruler-designer character, use triggers carefully
on_startup = {
	events = {
		plus.start.001 # Handle new-game setup, including game rules
	}
}

on_chronicle_start = {

}

on_yearly_pulse = {
	effect = {
		bloodlust_control_effect = yes
		dishonorable_degrade_effect = yes
		tyrant_degrade_effect = yes
		peaceful_years_increment_effect = yes
		indian_caste_fix_effect = yes
		debutante_cleanup_effect = yes
	}
	events = {
		plus.start.006 # Notify Player of normal end date

		Plus.1759 # Small demesne modifier
		Plus.1760 # Overextended republic

		# AI vassal has a vassal too far away
		Plus.1757

		Plus.1771 #Education pulse tombola event

		20354 # Remove Spy Network from invalid characters

		Plus.4010 # Tributes for AI
		Plus.4030 # Vassalize tributary for AI

		realmPlus.100 # Shatter empire if too small
		realmPlus.604 # Tributary Maintenance
	}
	random_events = {
		500 = GoPagan.150 # character has more than one sympathy trait

		relative_demands_estates = {
			1 = 0
			99 = Plus.106 # Relative demands estates due to his ambition
		}

		infertility_women = {
			49 = 0
			1 = Plus.125 # Women who get sick have a chance of having fertility affected long-term
			10 = Plus.126 # Woman is married and suspects she might be barren
		}

		infertility_men = {
			9 = 0

			1 = Plus.127 # Husband suspects wife is barren
		}

		vassal_demands_kingdom = {
			9 = 0

			1 = Plus.130 # Liege holds too many king titles in an uncentralized realm
		}

		skill_demotion_age = {
			9 = 0

			1 = CombatTraits.22 # Trait demotion due to age
		}

		offer_pay_ransom = {
			9 = 0

			1 = 50900 # Offer to pay own ransom
		}

		lifestyle = {
			# Lifestyle Events
			50 = Plus.434 # Debate with a zealous courtier
			50 = Plus.435 # Hunter
			50 = Plus.436 # Falconer
			50 = Plus.437 # Scholar
			50 = Plus.438 # Mystic
			50 = Plus.439 # Impaler
			50 = Plus.440 # Gardener
			50 = Plus.441 # Poet
			50 = Plus.442 # Administrator
			50 = Plus.443 # Hedonist
			50 = Plus.444 # Duelist
			50 = Plus.445 # Faqih
			50 = Plus.446 # Architect
			50 = Plus.447 # Strategist
			50 = Plus.448 # Socializer
			50 = Plus.449 # Schemer
			50 = Plus.450 # Gamer
			75 = Plus.451 # A traveling merchant visits during a storm
			75 = Plus.452 # A function is happening in the capital
			75 = Plus.453 # See your knights sparring together
			75 = Plus.454 # Courtiers arguing about the war
			75 = Plus.455 # A day of peace for a ruler
			75 = Plus.456 # A disturbance in the market
			75 = Plus.457 # Wondering about rival
			75 = Plus.458 # Thinking about the plot
			75 = Plus.459 # Bookseller comes to court
		}
	}
}

on_yearly_childhood_pulse = {
	effect = {
		remove_baby_portrait_effect = yes
	}
	random_events = {
		learning_combat_from_guardian = {
			3 = 0
			2 = CombatTraits.20 # Learning the sword from your guardian
		}
	}
}

on_bi_yearly_pulse = {
	random_events = {
		personality = {
			10 = Plus.5000 # Challenge "Just" trait
		}
	}
}

on_five_year_pulse = {
	effect = {
		women_scared_beauty_effect = yes
		no_longer_should_be_hiding_effect = yes
		remove_austerity_modifier_effect = yes
	}
	events = {
		realmPlus.600 # AI Abandon Baronies orphaned in another realm
	}
	random_events = {
		maintenance = {
			#Maintenance - These events are either flavour or we don't really care when they execute.
			10000 = Plus.1603 # Remove support for heir opinion if he is neither heir nor liege
			100 = maintPlus.104 # AI spouse finder
			10 = Plus.115 # Generate random claim on a neighbour
			80 = 0
		}
		estates = {
			1000 = Plus.108 # Character buys estates
			1000 = Plus.109 # Ruler sells off estates
		}
	}
}

on_decade_pulse = {
	random_events = {
		nigerian_prince = {
			6 = 0
			1 = Plus.1805 # Nigerian Prince
		}
	}
}


###########################
# OTHER, ALPHABETICAL ORDER
###########################

# Losing army owner is ROOT - opponent army owner is FROM
on_battle_lost_owner = {
	events = {
		Plus.362 # Rebel/Adventurer imprisoned after loss
	}
}

# ROOT is the baby
on_birth = {
	effect = {
		assign_baby_portrait_effect = yes
		add_cousin_opinion_effect = yes
	}
}

on_character_convert_culture = {
	effect = {
		bloodlust_control_effect = yes
	}
}

on_character_convert_religion = {
	effect = {
		bloodlust_control_effect = yes
	}
}

# FROM is the commander of the opposing side
# FROMFROM is the liege of the commander of the opposing side
on_combat_pulse = {
	random_events = {
		10 = DuelEngine.500 # Legacy - Disabled in event trigger
	}
}

# Triggers for character when they are put in command of a subunit
# ROOT is the affected character
on_command_sub_unit = {
	events = {
		Plus.354 # Manage Away From Court modifier
	}
}

# Triggers for character when they are put in command of a flank
# ROOT is the affected character
on_command_unit = {
	events = {
		Plus.354 # Manage Away From Court modifier
	}
}

on_death = {
	events = {
		Plus.111 # Estates passed onto children
		Plus.136 # Tanist titles give strong claims to non-inheriting children
		Plus.138 # Feudal Elective titles gives strong non-inheritable claims to Pretenders

		Plus.1761 # Player dies with non-dynasty heir
		Plus.1767 # hired educator dies

		Plus.340 # Cleanup "child serving abroad" event chains (Varangian/Celtic Holy Orders) when parent dies
		Plus.348 # Viceroys pass on wealth to a relative

		Plus.411 # Ruler dies who is a tributary or has them

		Plus.1610 # King/Emperor dies at low CA with possibly unsuitable heir

		Plus.1405 # Temple builder dies during the construction
	}
}

on_become_imprisoned_any_reason = {
	effect = {
		siege_cleanup_prisoner_effect = yes
	}
	events = {
		Plus.359 # Remove away_from_court
	}
}

on_exiled = {
	events = {
		Plus.110 #Removal of Estates
 	}
}

on_forced_consort = {
	events = {
		Plus.129 # Add barren modifier
	}
}

on_marriage = {
	effect = {
		lowborn_marries_duke_effect = yes
	}
	events = {
		Plus.128 # Add barren modifier
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder = {
	effect = {
		ascetic_cleanup_effect = yes # Clean up Christian ascetics upon becoming rulers again
		remove_uncrowned_effect = yes
		bloodlust_control_effect = yes
		remove_unworthy_crown_effect = yes
		dead_ruler_claim_effect = yes
		new_holder_province_chaos_effect = yes
		restore_title_secular_name_effect = yes
	}
	events = {
		Plus.1759 # Small demesne modifier
		Plus.1760 # Overextended republic
		Plus.364 # Fix Gender + Succession law when passed over
		Plus.368 # Deal with landed Varangians
		realmPlus.101 # Emperor picks between two held empires
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_inheritance = {
	effect = {
		ascetic_cleanup_effect = yes # Clean up Christian ascetics upon becoming rulers again
		remove_uncrowned_effect = yes
		bloodlust_control_effect = yes
		remove_unworthy_crown_effect = yes
		dead_ruler_claim_effect = yes
		religion_head_loses_claims_effect = yes
		restore_title_secular_name_effect = yes
	}
	events = {
		Plus.1750 # Ruler inherits kingdom without any of its de jure land
		Plus.1759 # Small demesne modifier
		Plus.1760 # Overextended republic
		Plus.341 # Check if overthrown ruler is re-inheriting
		Plus.368 # Deal with landed Varangians
		Plus.3200 # Duke/King title inherited in Imperial realm (viceroy)
		realmPlus.101 # Emperor picks between two held empires
		realmPlus.601 # Family members inherit half of previous ruler's Dishonorable or Tyrant
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_usurpation = {
	effect = {
		ascetic_cleanup_effect = yes # Clean up Christian ascetics upon becoming rulers again
		remove_uncrowned_effect = yes
		bloodlust_control_effect = yes
		remove_unworthy_crown_effect = yes
		restore_title_secular_name_effect = yes
	}
	events = {
		Plus.1759 # Small demesne modifier
		Plus.1760 # Overextended republic
		Plus.368 # Deal with landed Varangians
		Plus.3201 # Duke/King title usurped in Imperial realm (viceroy)
		realmPlus.101 # Emperor picks between two held empires
	}
}

on_siege_pulse = {
	random_events = {
		building_sacked = {
			100 = Plus.958 # Building sacked during siege
		}
	}
}

# Triggers for all characters in a unit (leading a flank or subunit) when it enters a province
# ROOT is the affected character
on_unit_entering_province = {
	events = {
		Plus.353 # Manage Away From Court modifier
	}
}

on_unlanded = {
	events = {
		Plus.1759 # Small demesne modifier
		Plus.1760 # Overextended republic
		Plus.358 # Manage Away From Court modifier
	}
}

# From = Attacker, Root = Defender
on_war_ended_defeat = {
	effect = {
		ROOT = {
			add_character_modifier = {
				name = victory_timer
				duration = 1
				hidden = yes
			}
			siege_cleanup_effect = yes
		}
		FROM = {
			siege_cleanup_effect = yes
		}
	}
	events = {
		Plus.357 # Manage Away From Court modifier
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)
	}
}

# From = Attacker, Root = Defender
on_war_ended_invalid = {
	effect = {
		FROM = {
			siege_cleanup_effect = yes
		}
		ROOT = {
			siege_cleanup_effect = yes
		}
	}
	events = {
		Plus.357 # Manage Away From Court modifier
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)
	}
}

# From = Attacker, Root = Defender
on_war_ended_victory = {
	effect = {
		FROM = {
			add_character_modifier = {
				name = victory_timer
				duration = 1
				hidden = yes
			}
			siege_cleanup_effect = yes
		}
		ROOT = {
			siege_cleanup_effect = yes
		}
	}
	events = {
		Plus.357 # Manage Away From Court modifier
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)
	}
}

# From = Attacker, Root = Defender
on_war_ended_whitepeace = {
	effect = {
		FROM = {
			siege_cleanup_effect = yes
		}
		ROOT = {
			siege_cleanup_effect = yes
		}
	}
	events = {
		Plus.357 # Manage Away From Court modifier
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)
	}
}

# FROM is attacker
# ROOT is defender
on_war_started = {
	effect = {
		peaceful_years_reset_effect = yes
	}
	events = {
		Plus.356 # Manage Away From Court modifier
		Plus.548 # Rightful religion head is declared war upon by a member of their own religion
	}
}

###########################
# DIPLOMATIC NOTIFICATIONS
###########################

# FROM is the character recieving the event
# FROMFROM is the person sending the event
# ROOT is empty or a third party
# new_character is empty or a third party
# Starting scope is equal to FROMFROM

MAKE_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		Plus.128 # Add barren modifier
	}
}

OFFER_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		Plus.128 # Add barren modifier
	}
}